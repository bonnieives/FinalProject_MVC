@model FinalProject_MVC.Models.AppointmentModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Appointments</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.AppointmentId)

        @if ((int)Session["CurrentCategoryId"] == 6)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.DateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <!-- Use a single input for both date and time -->
                    <input type="datetime-local" id="DateTime" name="DateTime" class="form-control" value="@Model.DateTime.ToString("yyyy-MM-ddTHH:mm")" />
                    @Html.ValidationMessageFor(model => model.DateTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ApartmentId, "Select Property", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ApartmentId, (IEnumerable<SelectListItem>)ViewBag.Apartments, "Select Property", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ApartmentId, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else if ((int)Session["CurrentCategoryId"] == 7)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Confirmation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.DateTime)
                    @Html.HiddenFor(model => model.AppointmentId)
                    @Html.HiddenFor(model => model.ApartmentId)
                    @Html.HiddenFor(model => model.SenderId)
                    @Html.DropDownListFor(model => model.Confirmation, new SelectList(new[]
                    {
                        new SelectListItem { Text = "Confirmed", Value = "true" },
                        new SelectListItem { Text = "Not Confirmed", Value = "false" }
                    }, "Value", "Text"), "Select Confirmation", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Confirmation, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            @Html.HiddenFor(model => model.SenderId)
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
